function[desc1,desc2] = crossover_PMx(pred1,pred2)

%disp(pred1)
%disp(pred2)
par_ma = zeros(2,3);
desc1 = zeros(1,6);
desc2 = zeros(1,6);
for ed = 1:3
    par_ma(2,ed) = pred1(ed+2); 
    par_ma(1,ed) = pred2(ed+2);
    desc1(ed+2) = par_ma(1,ed);
    desc2(ed+2) = par_ma(2,ed);
end


par_ma_comp = zeros(2,3);
par_ma_comp(1,1) = pred1(1);
par_ma_comp(1,2) = pred1(2);
par_ma_comp(1,3) = pred1(6);
par_ma_comp(2,1) = pred2(1);
par_ma_comp(2,2) = pred2(2);
par_ma_comp(2,3) = pred2(6);
%disp(pred1)
%disp(pred2)
%disp(par_ma_comp)
%disp(par_ma)
par_ma_end = zeros(2,3);
for edx = 1:3
    for edr = 1:3    
        for eds = 1:3
            %for edr = 1:3
            if par_ma_comp(1,edr) == par_ma(1,eds)
                par_ma_end(1,edr) = par_ma_comp(2,edr);
                par_ma_end(2,edr) = par_ma_comp(1,edr);
            %else
            %    par_ma_end(1,edr) = par_ma(1,edr);
            end  
            if par_ma_comp(2,edr) == par_ma(2,eds)
                par_ma_end(2,edr) = par_ma_comp(1,edr);
                par_ma_end(1,edr) = par_ma_comp(2,edr); 
             %else
              %  par_ma_end(2,eds) = par_ma(2,edr);
            end

        %end
        end 
    end 
    for edi = 1:2
        for edp = 1:3
            if par_ma_end(edi,edp) == 0
                par_ma_end(edi,edp) = par_ma_comp(edi,edp);
            end
        end
    end

    %before to asigned, we need to compare the array par_ma_end,
    %exist the posibility that the number inside repet.

    for edf = 1:3
        for edg = 1:3
            if par_ma_end(1,edf) == par_ma_end(1,edg) && edf ~= edg
                val_temp = par_ma_end(1,edf);
                par_ma_end(1,edf) = par_ma_end(2,edf);
                par_ma_end(2,edf) = val_temp;
            end
        end
    end 
    for edk = 1:3
        for edl = 1:3
            if par_ma_end(2,edk) == par_ma_end(2,edl) && edk ~= edl
                val_temp = par_ma_end(2,edl);
                par_ma_end(2,edl) = par_ma_end(1,edl);
                par_ma_end(1,edl) = val_temp;
                disp('found')
            end
        end
    end
end    
disp(par_ma_end)
        


desc1(1) = par_ma_end(1,1);
desc1(2) = par_ma_end(1,2);
desc1(3) = par_ma(1,1);
desc1(4) = par_ma(1,2);
desc1(5) = par_ma(1,3);
desc1(6) = par_ma_end(1,3);


desc2(1) = par_ma_end(2,1);
desc2(2) = par_ma_end(2,2);
desc2(3) = par_ma(2,1);
desc2(4) = par_ma(2,2);
desc2(5) = par_ma(2,3);
desc2(6) = par_ma_end(2,3);

disp(desc1)
disp(desc2)





%================
%In this part we will check the final matriz,
%because we know that exist te particular case where
% may the numbers its repeat, but we don't know how
% to solve, and what is the specific case.

for ent = 1:6
    count_temp = 0;
    count_temp_b = 0;
    for eny = 1:6
        if desc1(ent) == desc1(eny)
            count_temp = count_temp + 1;
        end
        if desc2(ent) == desc2(eny)
            count_temp_b = count_temp_b + 1;
        end
    end
    if count_temp > 1 || count_temp_b > 1
        disp('fatal error in crossover')
    end    
end
%disp(par_ma)
%disp(desc1)
%disp(desc2)


end
